---
- name: Refresh Src, compile and install PRU-Fw, restart Kernel-Module, reinstall py-package, without Reboot
  hosts: all
  become: true

  vars:
    shepherd_install_path: /opt/shepherd
    pru_support_path: '{{ ti_path }}/{{ pru_support_package }}'
    #pru_support_path: '{{ shepherd_install_path }}/software/firmware/_pssp57g' # TODO: just for debug
    rebuild_kernel_module: true
    rebuild_python_package: true

  vars_prompt:
    # these can be also passed as argument:  -e "refresh_source=True" -> automatically skips these prompts
    - name: refresh_source
      prompt: "Do you want to (forcefully) git pull the Shepherd-Source on Nodes? [yesNo]"
      private: no
      default: "no"

  tasks:

  - name: GIT - Update Shepherd-Codebase
    git:
      repo: https://github.com/orgua/shepherd
      dest: '{{ shepherd_install_path }}'
      update: yes
      version: master
      force: yes
    when: refresh_source|bool
    become: false

  - name: Stop Kernel Module
    command: modprobe -rf shepherd
    ignore_errors: yes

  - name: Clean PRU Firmware Source
    make:
      chdir: "{{ shepherd_install_path }}/software/firmware/{{ item }}-shepherd-fw"
      target: clean
    environment:
      PRU_CGT: '{{ pru_cgt_path }}'
      PRU_SUPPORT: '{{ pru_support_path }}'
    with_items:
      - pru0
      - pru1
    become: false

  - name: Build PRU firmware
    make:
      chdir: "{{ shepherd_install_path }}/software/firmware/{{ item }}-shepherd-fw"
      target: all
    environment:
      PRU_CGT: '{{ pru_cgt_path }}'
      PRU_SUPPORT: '{{ pru_support_path }}'
    with_items:
      - pru0
      - pru1
    become: false
    
  - name: install PRU firmware
    make:
      chdir: "{{ shepherd_install_path }}/software/firmware/{{ item }}-shepherd-fw"
      target: install
    environment:
      PRU_CGT: '{{ pru_cgt_path }}'
      PRU_SUPPORT: '{{ pru_support_path }}'
    with_items:
      - pru0
      - pru1

  - name: clean shepherd device tree
    make:
      chdir: "{{ shepherd_install_path }}/software/firmware/device-tree"
      target: clean

  - name: build and install shepherd device tree
    make:
      chdir: "{{ shepherd_install_path }}/software/firmware/device-tree"
      target: install

  - name: Stop PRU0
    command: echo "stop" > /sys/class/remoteproc/remoteproc1/state

  - name: Stop PRU1
    command: echo "stop" > /sys/class/remoteproc/remoteproc2/state

  - name: Build and install kernel module
    make:
      chdir: "{{ shepherd_install_path }}/software/kernel-module/src"
      target: install
    when: rebuild_kernel_module|bool

  - name: Reload kernel modules
    command: depmod -a
    when: rebuild_kernel_module|bool

  - name: Install shepherd python package
    command: python3 setup.py install --force
    args:
      chdir: '{{ shepherd_install_path }}/software/python-package'
    tags:
      - install
      - python
    when: rebuild_python_package|bool

  - name: Load Shepherd-Module
    command: modprobe -a shepherd
    