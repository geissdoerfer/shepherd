/dts-v1/;
/plugin/;

/*
// future-reference, gpio.h contains: BONE_P8_03, etc
#include <dt-bindings/gpio/gpio.h>
// future-reference, omap.h contains: MUX_MODE#, PULL_UP, INPUT_EN, AM33XX_IOPAD, AM33XX_PADCONF, etc
#include <dt-bindings/pinctrl/omap.h>
*/


/ {
   // note: (older) "ti,beaglebone" types seem to working as well for v4.19.x-ti
   compatible = "ti,am335x-bone", "ti,am335x-bone-black", "ti,am335x-bone-green";

   part-number = "BB-SHPRD";
   version = "00A0";

   /* This overlay uses the following resources */
   exclusive-use =
        "P8.11", /* DEBUG PIN0 PRU0 */
        "P8.12", /* LED1 PRU0 */
        "P8.13", /* ENABLE HARVESTER */
        "P8.28", /* ADC RST/PDN */
        "P8.30", /* LED2 USER SPACE */
        "P8.33", /* GENERAL PURPOSE LED */
        "P8.34", /* GENERAL PURPOSE BUTTON */
        "P8.36", /* ENABLE LEVEL CONVERTER */
        "P8.41", /* DEBUG PIN0 PRU1 */
        "P8.42", /* DEBUG PIN1 PRU1 */
        "P8.43", /* TARGET GPIO2 */
        "P8.44", /* TARGET GPIO3 */
        "P8.45", /* TARGET GPIO0 */
        "P8.46", /* TARGET GPIO1 */
        "P9.11", /* ENABLE MPPT# */
        "P9.12", /* ENABLE V ANALOG */
        "P9.15", /* SELECT LOAD HOST */
        "P9.16", /* ENABLE V FIXED*/
        "P9.25", /* SPI CS ADC */
        "P9.27", /* SPI MISO */
        "P9.28", /* SPI SCLK */
        "P9.29", /* SELECT LOAD PRU */
        "P9.30", /* SPI MOSI */
        "P9.31", /* SPI CS DAC */
        "P9.41", /* SWDIO */
        "P9.42", /* SWDCLK */
        "pru0",
        "pru1";
   /* Check Table 9-60 in am335x TRM */

   /* Helper to show loaded overlays under: /proc/device-tree/chosen/overlays/  */
   /* Note:
        - root-path and "chosen" seem to produce a warning with dtc, internet is not helpful
        - this is the reference solution choosen by: https://github.com/RobertCNelson/bb.org-overlays
   */
   fragment@0 {
      target-path="/";
      __overlay__ {

         chosen {
            overlays {
               BB-SHPRD-00A0 = "12345678";
            };
         };
      };
   };


   fragment@1 {
      target = <&am33xx_pinmux>;
      __overlay__ {
         bb_shprd_pins: pinmux_bb_shprd_pins {
            pinctrl-single,pins = <
            /* TODO: could be translated to format (better human readable)
                AM33XX_IOPAD(0x0834, PIN_OUTPUT_PULLDOWN | INPUT_EN | MUX_MODE7)
                BONE_P8_11 MUX_MODE6
            0x034 0x06  /* P8.11, pr1_pru0_pru_r30_15 */
            0x030 0x06  /* P8.12, pr1_pru0_pru_r30_14 */
            0x024 0x07  /* P8.13, gpio0[23] */
            0x0e8 0x07	/* P8.28, gpio2[24] */
            0x0ec 0x07	/* P8.30, gpio2[25] */
            0x0d4 0x07	/* P8.33, gpio0[9] */
            0x0cc 0x37	/* P8.34, gpio2[17] */
            0x0c8 0x07	/* P8.36, gpio2[16] */
            0x0b0 0x05	/* P8.41, pr1_pru1_pru_r30_4 */
            0x0b4 0x05	/* P8.42, pr1_pru1_pru_r30_5 */
            0x0a8 0x26	/* P8.43, pr1_pru1_pru_r31_2 */
            0x0ac 0x26	/* P8.44, pr1_pru1_pru_r31_3 */
            0x0a0 0x26	/* P8.45, pr1_pru1_pru_r31_0 */
            0x0a4 0x26	/* P8.46, pr1_pru1_pru_r31_1 */

            0x070 0x07	/* P9_11, gpio0[30] */
            0x078 0x07	/* P9_12, gpio1[28] */
            0x040 0x07	/* P9_15, gpio1[16] */
            0x04c 0x07	/* P9_16, gpio1[19] */
            0x1ac 0x05	/* P9_25, pr1_pru0_pru_r30_7 */
            0x1a4 0x26	/* P9_27, pr1_pru0_pru_r31_5 */
            0x19c 0x05	/* P9_28, pr1_pru0_pru_r30_3 */
            0x194 0x2F	/* P9_29, gpio3[15], high imp */
            0x198 0x05	/* P9_30, pr1_pru0_pru_r30_2 */
            0x190 0x05	/* P9_31, pr1_pru0_pru_r30_0 */
            0x1a8 0x27	/* P9_41B, gpio3[20] */
            0x1a0 0x07	/* P9_42B, gpio3[18] */
            >;
         };
      };
   };

   fragment@2 {
       target = <&pruss>;
       __overlay__ {
           status = "okay";
            pinctrl-names = "default";
            pinctrl-0 = <&bb_shprd_pins>;
            shepherd{
               compatible = "tud,shepherd";
               prusses = <&pruss>;
            };	
       };
   };

};
